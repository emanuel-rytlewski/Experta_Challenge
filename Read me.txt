Tests:
Scenario 1: Crear un caso de seguro de robo
1-Go to page https://www.experta.com.ar/
2-Select Seguro.
3-Click on "Robo".
4-Enter "desde, nombre, apellido, e-mail, prefijo, telefono".
5-Click on "Cotiza".
6-Click on "Seleccion recomendada".
7-Select "Tipo de persona".
8-Enter "nombre, apellido".
9-Select "Condición impositiva".
10-Enter "DNI".
11-Select "Genero".
12-Enter "e-mail, telefono, codigo postal".
13-Select "localidad".
14-Enter "barrio, calle, altura, piso, departamento".
15-Click on "continuar".
16-Select "tarjeta de credito".
17-Select "empresa".
18-Enter "numero de tarjeta, mes de vencimiento, año de vencimiento, Titular".
19-Click on "Pago".
20-Assert numero de DNI, Nombre completo, direcion completa.

Scenario 2: Crear un caso de seguro de hogar
1-Go to page https://www.experta.com.ar/
2-Select "seguro".
3-Click on "hogar".
4-Enter "codigo postal".
5-Select "localidad".
6-Select "tipo de vivienda".
7-Enter "nombre, apellido, e-mail, prefijo, telefono".
8-Click on "cotizar".
No se puede continuar con el Test por que aparece un captcha.

Herramientas necesarias para correr el framework:
# install java 11 (skip if already installed)
# install chromedriver (skip if already installed)
# clone the project and launch the tests
git clone https://github.com/emanuel-rytlewski/Experta_Challenge.git

Respuestas:
1) Es un patrón de diseño que crea un repositorio de onjetos para elementos de la interfaz de usuario web.

2) En mi opinion los flujos que mas se repiten y los que se consideran mas importantes son los que se deberian automatizar.
Los que no se deben automatizar son aquellos flujos que el owner no considera importantes.

3)Si es una herramienta que se utiliza para crear maquinas virtuales que se pueden conectar entre si.

4)Es un componente recibe las órdenes de ejecución de los tests y coordina a múltiples navegadores para ejecutar los test en los distintos nodos de nuestra red. Asegura que las peticiones de los tests que se distribuyan y direcciona las peticiones de cada test al nodo apropiado.

5)a)El testeo se utilizaba al momento en que los desarrolladores hacian un release para verificar que sus cambios no rompieran nada del sistema. Ellos debian correr nuestras pruebas para corroborar.

b)Yo participo en dailys de mi equipo de QA, en retrospectivas del equipo de desarrollo, planning de QA.
En las planning de QA aportaba la estimacion de las tareas, correcciones/planificacion de test e ideas para mejorar nuestros test.

